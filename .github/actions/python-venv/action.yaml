name: python-venv
description: 'Clones project, configures Python, and populates virtual environment.'
inputs:
  python-version:
    description: 'Version of the Python interpreter.'
    required: true
    default: '3.7'
  python-configure-flags:
    description: 'Flags to pass to the configure script for Python builds.'
    required: false
runs:
  using: composite
  steps:
    - name: Clone Repository Code
      uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Install Asdf Core and Plugins
      uses: asdf-vm/actions/plugins-add@v1
    - name: Select Python Version (if requested)
      if: "${{ 'all' != inputs.python-version }}"
      run: |
        set -eu
        python_version="$(asdf latest python ${{ inputs.python-version }})"
        echo "ASDF_PYTHON_VERSION=${python_version}" >>${GITHUB_ENV}
      shell: bash
    - name: Add Python Configure Flags (if requested)
      if: "${{ inputs.python-configure-flags }}"
      run: |
        set -eu
        echo 'PYTHON_CONFIGURE_OPTS=${{ inputs.python-configure-flags }}' >>${GITHUB_ENV}
      shell: bash
    - name: Install Managed Versions
      run: asdf install
      shell: bash
    - name: Install Pipenv and Packages
      run: |
        set -e
        python -m pip install --upgrade pip setuptools wheel
        python -m pip install --upgrade pipenv
        python -m pip --verbose install --requirement sources/packages.pip
        python -m pip --verbose install --editable .
        asdf reshim python
      shell: bash
#    - name: Create Virtual Environment
#      run: |
#        set -eu
#        python_version_pipenv=$(python -c 'import sys; print( ".".join( map( str, sys.version_info[ : 2 ] ) ) )')
#        export PIPENV_PIPFILE=Pipfile-override
#        sed 's;^python_version = .*$;python_version = "'${python_version_pipenv}'";' Pipfile >${PIPENV_PIPFILE}
#        printenv | egrep ^PIPENV_PIPFILE >>${GITHUB_ENV}
#        # Note: '--skip-lock --dev' does not work properly with development dependencies
#        #       in 'setup.cfg' as of 2012-12-12. So, we have this bit of file-shuffling.
#        mv Pipfile.lock BACKUP-Pipfile.lock
#        pipenv --verbose install --dev
#        mv --force BACKUP-Pipfile.lock Pipfile.lock
#      shell: bash
