name: tests
on:
  pull_request:
    branches: ['*']
  push:
    branches: ['*']
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Note: MyPy is broken on Python 3.10 as of 2021-11-21.
        python-version: ['3.6', '3.7', '3.8', '3.9']
    steps:
      - name: Clone Repository Code
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Procure Baseline Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Pipenv
        run: sudo pip3 install pipenv
      - name: Create Virtual Environment
        run: pipenv sync --dev --python ${{ matrix.python-version }}
      - name: Test
        run: pipenv run invoke test
      - name: Preserve Coverage Results
        uses: actions/upload-artifact@v2
        with:
          name: coverage-results-${{ matrix.python-version }}
          path: caches/pytest/coverage.sqlite3.*
  report-coverage:
    needs: test
    runs-on: ubuntu-latest
    if: "${{ 'push' == github.event_name && 'refs/heads/master' == github.ref }}"
    steps:
      - name: Clone Repository Code
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Procure Baseline Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.6
      - name: Install Pipenv
        run: sudo pip3 install pipenv
      - name: Create Virtual Environment
        run: pipenv sync --dev
      - name: Restore Coverage Results
        uses: actions/download-artifact@v2
        with:
          path: caches/pytest
      - name: Relocate Coverage Results
        run: mv caches/pytest/coverage-results-*/coverage.sqlite3.* caches/pytest
      - name: Report Coverage
        run: pipenv run invoke report-coverage
      - name: Upload Coverage Report
        uses: codecov/codecov-action@v2
        with:
          files: artifacts/coverage-pytest/coverage.xml
  upload-github-pages:
    needs: test
    runs-on: ubuntu-latest
    if: "${{ 'push' == github.event_name && 'refs/heads/master' == github.ref }}"
    steps:
      - name: Clone Repository Code
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Procure Baseline Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.6
      - name: Install Pipenv
        run: sudo pip3 install pipenv
      - name: Create Virtual Environment
        run: pipenv sync --dev
      - name: Configure Git
        run: |
          git config user.name '${{ github.repository }} Action'
          git config user.email '${{ github.repository_owner }}@users.noreply.github.com'
      # TODO: Setup GPG. Prepopulate gpg-agent with passphrase.
      #       https://stackoverflow.com/a/57927025/14833542
      #       https://www.gnupg.org/documentation/manuals/gnupg/gpg_002dpreset_002dpassphrase.html
      #       https://www.gnupg.org/documentation/manuals/gnupg/Invoking-gpg_002dpreset_002dpassphrase.html#Invoking-gpg_002dpreset_002dpassphrase
      - name: Upload Github Pages
        run: pipenv run invoke upload-github-pages
